apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ml-platform-ingress
  namespace: ml-platform
  labels:
    app: ml-platform
  annotations:
    # Ingress class (nginx, traefik, etc.)
    kubernetes.io/ingress.class: nginx

    # Force HTTPS redirect
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # SSL redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

    # Rate limiting (optional)
    # - Limit to 100 requests per minute per IP
    nginx.ingress.kubernetes.io/limit-rps: "100"

    # CORS (optional)
    # - Allow cross-origin requests from web UI
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://ml-ui.example.com"

    # Request size limit
    # - Allow large model uploads (100MB)
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"

    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"

    # Certificate issuer (cert-manager)
    # - Automatically provision Let's Encrypt certificate
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  # TLS configuration
  tls:
  - hosts:
    - ml-platform.example.com
    secretName: ml-platform-tls  # TLS certificate secret

  rules:
  # Main API endpoint
  - host: ml-platform.example.com
    http:
      paths:
      # Job submission API
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: ml-submitter
            port:
              number: 8000

      # Health check endpoint (public)
      - path: /health
        pathType: Exact
        backend:
          service:
            name: ml-submitter
            port:
              number: 8000

      # Metrics endpoint (internal only - remove in production)
      # - path: /metrics
      #   pathType: Exact
      #   backend:
      #     service:
      #       name: ml-submitter
      #       port:
      #         number: 8000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ml-platform-monitoring
  namespace: ml-platform
  labels:
    app: ml-platform
    component: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - ML Platform Monitoring'



    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - ml-monitoring.example.com
    secretName: ml-monitoring-tls

  rules:
  - host: ml-monitoring.example.com
    http:
      paths:
      # Prometheus UI
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-operated
            port:
              number: 9090

      # Grafana UI
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
